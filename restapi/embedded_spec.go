// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Autonet api documentation",
    "title": "Autonet Api Documentation",
    "version": "1.0"
  },
  "basePath": "/",
  "paths": {
    "/departmant": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "department"
        ],
        "summary": "Search for all departmants",
        "operationId": "getDepartments",
        "parameters": [
          {
            "type": "string",
            "description": "filter by department name",
            "name": "nameFilter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepartmentPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/team": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Get the list of teams, optionaly filtered by department",
        "operationId": "getTeams",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "id of the department to filter by",
            "name": "departmentId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Get list of users with filtration by optional creteria",
        "operationId": "getUsers",
        "parameters": [
          {
            "type": "string",
            "description": "department id filter",
            "name": "departmentId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "int32",
            "default": 0,
            "description": "page number",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 10,
            "description": "page number",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Department": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DepartmentPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Department"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TeamPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "UserPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Department related api",
      "name": "department"
    },
    {
      "description": "Team related api",
      "name": "team"
    },
    {
      "description": "Users related api",
      "name": "user"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Autonet api documentation",
    "title": "Autonet Api Documentation",
    "version": "1.0"
  },
  "basePath": "/",
  "paths": {
    "/departmant": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "department"
        ],
        "summary": "Search for all departmants",
        "operationId": "getDepartments",
        "parameters": [
          {
            "type": "string",
            "description": "filter by department name",
            "name": "nameFilter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepartmentPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/team": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Get the list of teams, optionaly filtered by department",
        "operationId": "getTeams",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "id of the department to filter by",
            "name": "departmentId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Get list of users with filtration by optional creteria",
        "operationId": "getUsers",
        "parameters": [
          {
            "type": "string",
            "description": "department id filter",
            "name": "departmentId",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "int32",
            "default": 0,
            "description": "page number",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 10,
            "description": "page number",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserPage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Department": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DepartmentPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Department"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TeamPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string",
          "format": "uuid"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "UserPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "pageNumber": {
          "type": "number",
          "format": "int32"
        },
        "totalPages": {
          "type": "number",
          "format": "int32"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Department related api",
      "name": "department"
    },
    {
      "description": "Team related api",
      "name": "team"
    },
    {
      "description": "Users related api",
      "name": "user"
    }
  ]
}`))
}
