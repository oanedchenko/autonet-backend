---
swagger: '2.0'
info:
  description: Autonet api documentation
  version: '1.0'
  title: Autonet Api Documentation
basePath: "/"
tags:
- name: department
  description: Department related api
- name: team
  description: Team related api
- name: user
  description: Users related api
paths:

  "/department":
    get:
      tags:
      - department
      summary: Search for all departments
      operationId: getDepartments
      produces:
      - application/json
      parameters:
      - in: query
        name: pageNumber
        type: number
        format: int32
        description: page number
        required: false
        default: 0
      - in: query
        name: pageSize
        type: number
        format: int32
        description: page size
        required: false
        default: 10
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/DepartmentPage"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  "/team":
    get:
      tags:
      - team
      summary: Get the list of teams, optionaly filtered by department
      operationId: getTeams
      produces:
      - application/json
      parameters:
      - name: departmentId
        in: query
        description: id of the department to filter by
        required: false
        type: string
        format: uuid
      - in: query
        name: pageNumber
        type: number
        format: int32
        description: page number
        required: false
        default: 0
      - in: query
        name: pageSize
        type: number
        format: int32
        description: page size
        required: false
        default: 10
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/TeamPage"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  "/user":
    get:
      tags:
      - user
      summary: Get list of users with filtration by optional creteria
      operationId: getUsers
      produces:
      - application/json
      parameters:
      - in: query
        name: departmentId
        description: department id filter
        required: false
        type: string
      - in: query
        name: teamId
        description: team id filter
        required: false
        type: string
      - in: query
        name: pageNumber
        type: number
        format: int32
        description: page number
        required: false
        default: 0
      - in: query
        name: pageSize
        type: number
        format: int32
        description: page size
        required: false
        default: 10
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/UserPage"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

definitions:
  
  User:
    type: object
    properties:
      id: 
        type: string
        format: uuid
      firstName: 
        type: string
      lastName: 
        type: string
      avatar:
        type: string
        format: uuid
      departmentId:
        type: string
        format: uuid
      departmentName:
        type: string
      teamId:
        type: string
        format: uuid
      teamName:
        type: string
      jobTitle:
        type: string
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'

  Contact:
    type: object
    properties:
      type:
        type: string
        enum:
        - EMAIL
        - SLACK
      value:
        type: string

  UserPage:
    type: object
    properties:
      items:
        type: array
        items: 
          $ref: '#/definitions/User'
      pageNumber:
        type: number
        format: int32
      totalPages:
        type: number
        format: int32
  
  Department:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
  
  DepartmentPage:
    type: object
    properties:
      items:
        type: array
        items: 
          $ref: '#/definitions/Department'
      pageNumber:
        type: number
        format: int32
      totalPages:
        type: number
        format: int32

  Team:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        
  TeamPage:
    type: object
    properties:
      items:
        type: array
        items: 
          $ref: '#/definitions/Team'
      pageNumber:
        type: number
        format: int32
      totalPages:
        type: number
        format: int32
    
      
    
